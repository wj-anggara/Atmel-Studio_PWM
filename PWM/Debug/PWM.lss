
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000018c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000118  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000018c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000018c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007b9  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006db  00000000  00000000  000009e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002d8  00000000  00000000  000010c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000054  00000000  00000000  00001398  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ad  00000000  00000000  000013ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000074  00000000  00000000  00001799  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  0000180d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__vector_16>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 64 00 	call	0xc8	; 0xc8 <main>
  88:	0c 94 8a 00 	jmp	0x114	; 0x114 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <InitPWM>:

int pwmVal=0;

void InitPWM(void)
{
	DDRD |= (1 << PORTD6);
  90:	56 9a       	sbi	0x0a, 6	; 10
	TCCR0A = (1 << COM0A1) | (1 << WGM00) | (1 << WGM01);
  92:	83 e8       	ldi	r24, 0x83	; 131
  94:	84 bd       	out	0x24, r24	; 36
	TIMSK0 = (1 << TOIE0);
  96:	81 e0       	ldi	r24, 0x01	; 1
  98:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	OCR0A = pwmVal;
  9c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  a0:	87 bd       	out	0x27, r24	; 39
	sei();
  a2:	78 94       	sei
	TCCR0B = (1 << CS00) | (1 << CS02);
  a4:	85 e0       	ldi	r24, 0x05	; 5
  a6:	85 bd       	out	0x25, r24	; 37
  a8:	08 95       	ret

000000aa <__vector_16>:
}
ISR(TIMER0_OVF_vect)
{
  aa:	1f 92       	push	r1
  ac:	0f 92       	push	r0
  ae:	0f b6       	in	r0, 0x3f	; 63
  b0:	0f 92       	push	r0
  b2:	11 24       	eor	r1, r1
  b4:	8f 93       	push	r24
	OCR0A = pwmVal;		//D6
  b6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  ba:	87 bd       	out	0x27, r24	; 39
}
  bc:	8f 91       	pop	r24
  be:	0f 90       	pop	r0
  c0:	0f be       	out	0x3f, r0	; 63
  c2:	0f 90       	pop	r0
  c4:	1f 90       	pop	r1
  c6:	18 95       	reti

000000c8 <main>:

int main(void)
{
   InitPWM();
  c8:	0e 94 48 00 	call	0x90	; 0x90 <InitPWM>
   while(1)
   {
      for(int i=0;i<=255;i++)
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	20 e0       	ldi	r18, 0x00	; 0
  d0:	5f ef       	ldi	r21, 0xFF	; 255
  d2:	40 e0       	ldi	r20, 0x00	; 0
  d4:	83 2f       	mov	r24, r19
  d6:	92 2f       	mov	r25, r18
      {
         pwmVal=i;
  d8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  dc:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e0:	ef e1       	ldi	r30, 0x1F	; 31
  e2:	fe e4       	ldi	r31, 0x4E	; 78
  e4:	31 97       	sbiw	r30, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <main+0x1c>
  e8:	00 c0       	rjmp	.+0      	; 0xea <main+0x22>
  ea:	00 00       	nop
int main(void)
{
   InitPWM();
   while(1)
   {
      for(int i=0;i<=255;i++)
  ec:	01 96       	adiw	r24, 0x01	; 1
  ee:	81 15       	cp	r24, r1
  f0:	f1 e0       	ldi	r31, 0x01	; 1
  f2:	9f 07       	cpc	r25, r31
  f4:	89 f7       	brne	.-30     	; 0xd8 <main+0x10>
  f6:	85 2f       	mov	r24, r21
  f8:	94 2f       	mov	r25, r20
         pwmVal=i;
         _delay_ms(5);
	  }
      for(int i=255;i>=0;i--)
      {
         pwmVal=i;
  fa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  fe:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 102:	ef e1       	ldi	r30, 0x1F	; 31
 104:	fe e4       	ldi	r31, 0x4E	; 78
 106:	31 97       	sbiw	r30, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <main+0x3e>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <main+0x44>
 10c:	00 00       	nop
      for(int i=0;i<=255;i++)
      {
         pwmVal=i;
         _delay_ms(5);
	  }
      for(int i=255;i>=0;i--)
 10e:	01 97       	sbiw	r24, 0x01	; 1
 110:	a0 f7       	brcc	.-24     	; 0xfa <main+0x32>
 112:	e0 cf       	rjmp	.-64     	; 0xd4 <main+0xc>

00000114 <_exit>:
 114:	f8 94       	cli

00000116 <__stop_program>:
 116:	ff cf       	rjmp	.-2      	; 0x116 <__stop_program>
